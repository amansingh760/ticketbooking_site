{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat-bot\\\\chatbot-interface\\\\src\\\\DropdownWithSearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropdownWithSearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [options, setOptions] = useState([]);\n  const data = [{\n    id: 1,\n    name: 'John Doe',\n    email: 'john@example.com',\n    age: 25\n  }, {\n    id: 2,\n    name: 'Jane Smith',\n    email: 'jane@example.com',\n    age: 30\n  }, {\n    id: 3,\n    name: 'Bob Johnson',\n    email: 'bob@example.com',\n    age: 35\n  }];\n  useEffect(() => {\n    fetch('http://localhost:5000/state-data').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setOptions(data); // Set the data to state\n    });\n    // .catch((error) => {\n    //     alert('something went wrong !');\n    // });\n  }, []);\n  const handleSearch = () => {\n    onSearch(query || selectedOption); // Use selected option if query is empty\n    setQuery(''); // Clear the input after search\n  };\n  const handleSelectChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: handleSelectChange,\n        className: \"search-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        children: \"Explore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(DropdownWithSearchBar, \"zWkecH+wQqEhRFIYZUYm2n62Ohs=\");\n_c = DropdownWithSearchBar;\nexport default DropdownWithSearchBar;\nvar _c;\n$RefreshReg$(_c, \"DropdownWithSearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DropdownWithSearchBar","onSearch","_s","query","setQuery","selectedOption","setSelectedOption","options","setOptions","data","id","name","email","age","fetch","then","response","ok","Error","json","handleSearch","handleSelectChange","event","target","value","children","className","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["D:/chat-bot/chatbot-interface/src/DropdownWithSearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst DropdownWithSearchBar = ({ onSearch }) => {\r\n    const [query, setQuery] = useState('');\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n\r\n    const data = [\r\n        { id: 1, name: 'John Doe', email: 'john@example.com', age: 25 },\r\n        { id: 2, name: 'Jane Smith', email: 'jane@example.com', age: 30 },\r\n        { id: 3, name: 'Bob Johnson', email: 'bob@example.com', age: 35 }\r\n      ];\r\n    \r\n    \r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/state-data')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOptions(data);    // Set the data to state\r\n            });\r\n            // .catch((error) => {\r\n            //     alert('something went wrong !');\r\n            // });\r\n    }, []);\r\n\r\n\r\n    const handleSearch = () => {\r\n        onSearch(query || selectedOption); // Use selected option if query is empty\r\n        setQuery(''); // Clear the input after search\r\n    };\r\n\r\n    const handleSelectChange = (event) => {\r\n        setSelectedOption(event.target.value);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"search-container\">\r\n\r\n            <select value={selectedOption} onChange={handleSelectChange} className=\"search-input\">\r\n                <option value=\"\" disabled>Select</option>\r\n                {options.map((option, index) => (\r\n                    <option key={index} value={option}>\r\n                        {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                placeholder=\"Search here what you want to explore....\"\r\n            /> */}\r\n            <button className=\"search-button\" onClick={handleSearch}>\r\n                Explore\r\n            </button>\r\n        </div>\r\n                </>\r\n\r\n    );\r\n};\r\n\r\nexport default DropdownWithSearchBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}