{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat-bot\\\\chatbot-interface\\\\src\\\\DropdownWithSearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownWithSearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [options, setOptions] = useState([]);\n\n  // const options = [\n  //     'Allahabad Museum', 'Bundelkhand Museum', 'Abai Memorial Panchal Museum', 'Rahul Museum',\n  //     'Government Bauddh Museum', 'Rani Mahal Museum', 'Kanpur Sangrahalaya', 'Bauddh Museum', 'Bal Museum',\n  //     'Provincial Hygiene Institute', 'State Museum', 'Lok Kala Museum', 'Mathura Museum', 'State Jain museum Museum',\n  //     'District Museum', 'Sarnath Museum', 'Bharat Kala Bhawan Museum', 'Ramnagar museum'\n  // ];\n  useEffect(() => {\n    // Fetch data from the API on component mount\n    fetch('http://localhost:5000/state-data').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setOptions(data); // Set the data to state\n    });\n    // .catch((error) => {\n    //     alert('something went wrong !');\n    // });\n  }, []);\n  const handleSearch = () => {\n    onSearch(query || selectedOption); // Use selected option if query is empty\n    setQuery(''); // Clear the input after search\n  };\n  const handleSelectChange = event => {\n    setSelectedOption(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedOption,\n      onChange: handleSelectChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      onClick: handleSearch,\n      children: \"Explore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(DropdownWithSearchBar, \"zWkecH+wQqEhRFIYZUYm2n62Ohs=\");\n_c = DropdownWithSearchBar;\nexport default DropdownWithSearchBar;\nvar _c;\n$RefreshReg$(_c, \"DropdownWithSearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DropdownWithSearchBar","onSearch","_s","query","setQuery","selectedOption","setSelectedOption","options","setOptions","fetch","then","response","ok","Error","json","data","handleSearch","handleSelectChange","event","target","value","className","children","onChange","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","onClick","_c","$RefreshReg$"],"sources":["D:/chat-bot/chatbot-interface/src/DropdownWithSearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\n\r\nconst DropdownWithSearchBar = ({ onSearch }) => {\r\n    const [query, setQuery] = useState('');\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    \r\n    // const options = [\r\n    //     'Allahabad Museum', 'Bundelkhand Museum', 'Abai Memorial Panchal Museum', 'Rahul Museum',\r\n    //     'Government Bauddh Museum', 'Rani Mahal Museum', 'Kanpur Sangrahalaya', 'Bauddh Museum', 'Bal Museum',\r\n    //     'Provincial Hygiene Institute', 'State Museum', 'Lok Kala Museum', 'Mathura Museum', 'State Jain museum Museum',\r\n    //     'District Museum', 'Sarnath Museum', 'Bharat Kala Bhawan Museum', 'Ramnagar museum'\r\n    // ];\r\n    useEffect(() => {\r\n        // Fetch data from the API on component mount\r\n        fetch('http://localhost:5000/state-data')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOptions(data);    // Set the data to state\r\n            });\r\n            // .catch((error) => {\r\n            //     alert('something went wrong !');\r\n            // });\r\n    }, []);\r\n\r\n\r\n    const handleSearch = () => {\r\n        onSearch(query || selectedOption); // Use selected option if query is empty\r\n        setQuery(''); // Clear the input after search\r\n    };\r\n\r\n    const handleSelectChange = (event) => {\r\n        setSelectedOption(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n\r\n            <select value={selectedOption} onChange={handleSelectChange} >\r\n                <option value=\"\" disabled>Select</option>\r\n                {options.map((option, index) => (\r\n                    <option key={index} value={option}>\r\n                        {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n\r\n            {/* <input\r\n                type=\"text\"\r\n                className=\"search-input\"\r\n                value={query}\r\n                onChange={(e) => setQuery(e.target.value)}\r\n                placeholder=\"Search here what you want to explore....\"\r\n            /> */}\r\n            <button className=\"search-button\" onClick={handleSearch}>\r\n                Explore\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropdownWithSearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,CAAC,MAAM;IACZ;IACAY,KAAK,CAAC,kCAAkC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZP,UAAU,CAACO,IAAI,CAAC,CAAC,CAAI;IACzB,CAAC,CAAC;IACF;IACA;IACA;EACR,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBf,QAAQ,CAACE,KAAK,IAAIE,cAAc,CAAC,CAAC,CAAC;IACnCD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMa,kBAAkB,GAAIC,KAAK,IAAK;IAClCZ,iBAAiB,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACzC,CAAC;EAED,oBACIrB,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAE7BvB,OAAA;MAAQqB,KAAK,EAAEf,cAAe;MAACkB,QAAQ,EAAEN,kBAAmB;MAAAK,QAAA,gBACxDvB,OAAA;QAAQqB,KAAK,EAAC,EAAE;QAACI,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxCrB,OAAO,CAACsB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBhC,OAAA;QAAoBqB,KAAK,EAAEU,MAAO;QAAAR,QAAA,EAC7BQ;MAAM,GADEC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAST7B,OAAA;MAAQsB,SAAS,EAAC,eAAe;MAACW,OAAO,EAAEhB,YAAa;MAAAM,QAAA,EAAC;IAEzD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA9DIF,qBAAqB;AAAAiC,EAAA,GAArBjC,qBAAqB;AAgE3B,eAAeA,qBAAqB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}