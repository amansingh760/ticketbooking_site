{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\chatbot-interface\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// src/components/Chatbot.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim()) {\n      const newMessage = {\n        user: 'You',\n        text: input\n      };\n      setMessages([...messages, newMessage]);\n      setInput('');\n      try {\n        const response = await axios.post('http://localhost:5000/chat', {\n          message: input\n        });\n        const botMessage = {\n          user: 'Bot',\n          text: response.data.response\n        };\n        setMessages([...messages, newMessage, botMessage]);\n      } catch (error) {\n        console.error('Error sending message:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chatbot-message ${msg.user === 'Bot' ? 'bot' : 'user'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.user, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type a message...\",\n        onKeyPress: e => e.key === 'Enter' && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","trim","newMessage","user","text","response","post","message","botMessage","data","error","console","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/chatbot-interface/src/Chatbot.js"],"sourcesContent":["// src/components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Chatbot.css';\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleSend = async () => {\r\n        if (input.trim()) {\r\n            const newMessage = { user: 'You', text: input };\r\n            setMessages([...messages, newMessage]);\r\n            setInput('');\r\n\r\n            try {\r\n                const response = await axios.post('http://localhost:5000/chat', { message: input });\r\n                const botMessage = { user: 'Bot', text: response.data.response };\r\n                setMessages([...messages, newMessage, botMessage]);\r\n            } catch (error) {\r\n                console.error('Error sending message:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot\">\r\n            <div className=\"chatbot-messages\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`chatbot-message ${msg.user === 'Bot' ? 'bot' : 'user'}`}>\r\n                        <strong>{msg.user}: </strong>{msg.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"chatbot-input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    placeholder=\"Type a message...\"\r\n                    onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n                />\r\n                <button onClick={handleSend}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}