{"ast":null,"code":"var _jsxFileName = \"D:\\\\chat-bot\\\\chatbot-interface\\\\src\\\\DropdownWithSearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DropdownWithSearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const [selectedOption, setSelectedOption] = useState('');\n  const [options, setOptions] = useState([]);\n  const [tabledata, settabledata] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/state-data').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setOptions(data); // Set the data to state\n    });\n    // .catch((error) => {\n    //     alert('something went wrong !');\n    // });\n  }, []);\n  const handleSubmit = async () => {\n    // event.preventDefault(); // Prevent the default form submission behavior\n    console.log('Selected option:', selectedOption);\n    const response = await fetch('http://localhost:5000/get-museum-data', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"state\": selectedOption\n      }) // Send the selected option\n    });\n    if (!response.ok) {\n      throw new Error('Network response was not ok'); // Handle network errors\n    }\n    const data = await response.json(); // Parse JSON response\n    console.log('Success:', data);\n    settabledata(data);\n    // You can add further logic here, like sending data to an API\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedOption,\n        onChange: e => setSelectedOption(e.target.value),\n        className: \"search-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option,\n          children: option\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit,\n        className: \"search-button\",\n        children: \"Explore\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bootstrap Table in React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"thead-dark\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"state\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"nameofmuseum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"nameofdistrict\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"openingtime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"closingtime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ticketprice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"closingdays\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tabledata.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.nameofmuseum\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.nameofdistrict\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.openingtime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.closingtime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.ticketprice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.closingdays\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, row._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(DropdownWithSearchBar, \"BYpQ2QJMPlNog+9GzmfMgUOh/ho=\");\n_c = DropdownWithSearchBar;\nexport default DropdownWithSearchBar;\nvar _c;\n$RefreshReg$(_c, \"DropdownWithSearchBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","DropdownWithSearchBar","onSearch","_s","query","setQuery","selectedOption","setSelectedOption","options","setOptions","tabledata","settabledata","fetch","then","response","ok","Error","json","data","handleSubmit","console","log","method","headers","body","JSON","stringify","children","className","value","onChange","e","target","disabled","fileName","_jsxFileName","lineNumber","columnNumber","map","option","index","type","onClick","row","state","nameofmuseum","nameofdistrict","location","openingtime","closingtime","ticketprice","closingdays","_id","_c","$RefreshReg$"],"sources":["D:/chat-bot/chatbot-interface/src/DropdownWithSearchBar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst DropdownWithSearchBar = ({ onSearch }) => {\r\n    const [query, setQuery] = useState('');\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n    const [options, setOptions] = useState([]);\r\n    const [tabledata, settabledata] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/state-data')\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setOptions(data);    // Set the data to state\r\n            });\r\n        // .catch((error) => {\r\n        //     alert('something went wrong !');\r\n        // });\r\n    }, []);\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        // event.preventDefault(); // Prevent the default form submission behavior\r\n        console.log('Selected option:', selectedOption);\r\n        const response = await fetch('http://localhost:5000/get-museum-data', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ \"state\": selectedOption }), // Send the selected option\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok'); // Handle network errors\r\n        }\r\n\r\n        const data = await response.json(); // Parse JSON response\r\n        console.log('Success:', data);\r\n        settabledata(data);\r\n        // You can add further logic here, like sending data to an API\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <div className=\"search-container\">\r\n\r\n\r\n            </div> */}\r\n\r\n            <div className=\"container mt-4\">\r\n                {/* <form onSubmit={handleSubmit}> */}\r\n                    <select value={selectedOption} onChange={(e) => setSelectedOption(e.target.value)} className=\"search-input\">\r\n                        <option value=\"\" disabled>Select</option>\r\n                        {options.map((option, index) => (\r\n                            <option key={index} value={option}>\r\n                                {option}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n\r\n                    <button type=\"button\" onClick={handleSubmit} className=\"search-button\">Explore</button>\r\n                {/* </form> */}\r\n                <h2>Bootstrap Table in React</h2>\r\n                <table className=\"table table-striped table-bordered\">\r\n                    <thead className=\"thead-dark\">\r\n                        <tr>\r\n                            <th>state</th>\r\n                            <th>nameofmuseum</th>\r\n                            <th>nameofdistrict</th>\r\n                            <th>location</th>\r\n                            <th>openingtime</th>\r\n                            <th>closingtime</th>\r\n                            <th>ticketprice</th>\r\n                            <th>closingdays</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tabledata.map((row) => (\r\n                            <tr key={row._id}>\r\n                                <td>{row.state}</td>\r\n                                <td>{row.nameofmuseum}</td>\r\n                                <td>{row.nameofdistrict}</td>\r\n                                <td>{row.location}</td>\r\n                                <td>{row.openingtime}</td>\r\n                                <td>{row.closingtime}</td>\r\n                                <td>{row.ticketprice}</td>\r\n                                <td>{row.closingdays}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default DropdownWithSearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAG9C,MAAMC,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAG9CC,SAAS,CAAC,MAAM;IACZgB,KAAK,CAAC,kCAAkC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACZT,UAAU,CAACS,IAAI,CAAC,CAAC,CAAI;IACzB,CAAC,CAAC;IACN;IACA;IACA;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACAC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEf,cAAc,CAAC;IAC/C,MAAMQ,QAAQ,GAAG,MAAMF,KAAK,CAAC,uCAAuC,EAAE;MAClEU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAE,OAAO,EAAEpB;MAAe,CAAC,CAAC,CAAE;IACvD,CAAC,CAAC;IAEF,IAAI,CAACQ,QAAQ,CAACC,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC,CAAC,CAAC;IACpD;IAEA,MAAME,IAAI,GAAG,MAAMJ,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IACpCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAAC;IAC7BP,YAAY,CAACO,IAAI,CAAC;IAClB;EACJ,CAAC;EAID,oBACIpB,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eAMI7B,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAEvB7B,OAAA;QAAQ+B,KAAK,EAAEvB,cAAe;QAACwB,QAAQ,EAAGC,CAAC,IAAKxB,iBAAiB,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAACD,SAAS,EAAC,cAAc;QAAAD,QAAA,gBACvG7B,OAAA;UAAQ+B,KAAK,EAAC,EAAE;UAACI,QAAQ;UAAAN,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACxC7B,OAAO,CAAC8B,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvB1C,OAAA;UAAoB+B,KAAK,EAAEU,MAAO;UAAAZ,QAAA,EAC7BY;QAAM,GADEC,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAETvC,OAAA;QAAQ2C,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAEvB,YAAa;QAACS,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAO;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE3FvC,OAAA;QAAA6B,QAAA,EAAI;MAAwB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjCvC,OAAA;QAAO8B,SAAS,EAAC,oCAAoC;QAAAD,QAAA,gBACjD7B,OAAA;UAAO8B,SAAS,EAAC,YAAY;UAAAD,QAAA,eACzB7B,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAI;YAAK;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACdvC,OAAA;cAAA6B,QAAA,EAAI;YAAY;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBvC,OAAA;cAAA6B,QAAA,EAAI;YAAc;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACvBvC,OAAA;cAAA6B,QAAA,EAAI;YAAQ;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBvC,OAAA;cAAA6B,QAAA,EAAI;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvC,OAAA;cAAA6B,QAAA,EAAI;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvC,OAAA;cAAA6B,QAAA,EAAI;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBvC,OAAA;cAAA6B,QAAA,EAAI;YAAW;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRvC,OAAA;UAAA6B,QAAA,EACKjB,SAAS,CAAC4B,GAAG,CAAEK,GAAG,iBACf7C,OAAA;YAAA6B,QAAA,gBACI7B,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACC;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACE;YAAY;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC3BvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACG;YAAc;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACI;YAAQ;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACK;YAAW;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACM;YAAW;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACO;YAAW;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC1BvC,OAAA;cAAA6B,QAAA,EAAKgB,GAAG,CAACQ;YAAW;cAAAjB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GARrBM,GAAG,CAACS,GAAG;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASZ,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC,gBACR,CAAC;AAGX,CAAC;AAAClC,EAAA,CApGIF,qBAAqB;AAAAoD,EAAA,GAArBpD,qBAAqB;AAsG3B,eAAeA,qBAAqB;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}