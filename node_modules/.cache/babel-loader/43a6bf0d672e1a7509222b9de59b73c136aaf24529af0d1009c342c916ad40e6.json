{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\chatbot-interface\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// src/Chatbot.js\n\nimport React, { useState } from 'react';\nimport './Chatbot.css'; // Optional: for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const handleSend = () => {\n    if (input.trim()) {\n      // Add user message\n      const userMessage = {\n        text: input,\n        sender: 'user'\n      };\n      setMessages([...messages, userMessage]);\n\n      // Mock bot response (you can replace this with a real API call)\n      const botResponse = {\n        text: \"You said: \" + input,\n        sender: 'bot'\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage, botResponse]);\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: msg.sender,\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyPress: e => e.key === 'Enter' && handleSend(),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","text","sender","botResponse","prevMessages","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/chatbot-interface/src/Chatbot.js"],"sourcesContent":["// src/Chatbot.js\r\n\r\nimport React, { useState } from 'react';\r\nimport './Chatbot.css'; // Optional: for styling\r\n\r\nconst Chatbot = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleSend = () => {\r\n        if (input.trim()) {\r\n            // Add user message\r\n            const userMessage = { text: input, sender: 'user' };\r\n            setMessages([...messages, userMessage]);\r\n\r\n            // Mock bot response (you can replace this with a real API call)\r\n            const botResponse = { text: \"You said: \" + input, sender: 'bot' };\r\n            setMessages((prevMessages) => [...prevMessages, userMessage, botResponse]);\r\n\r\n            setInput('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chatbot-container\">\r\n            <div className=\"chat-window\">\r\n                <div className=\"messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index} className={msg.sender}>\r\n                            {msg.text}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"input-area\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyPress={(e) => e.key === 'Enter' && handleSend()}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button onClick={handleSend}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrB,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MACd;MACA,MAAMC,WAAW,GAAG;QAAEC,IAAI,EAAEL,KAAK;QAAEM,MAAM,EAAE;MAAO,CAAC;MACnDP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,WAAW,CAAC,CAAC;;MAEvC;MACA,MAAMG,WAAW,GAAG;QAAEF,IAAI,EAAE,YAAY,GAAGL,KAAK;QAAEM,MAAM,EAAE;MAAM,CAAC;MACjEP,WAAW,CAAES,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEJ,WAAW,EAAEG,WAAW,CAAC,CAAC;MAE1EN,QAAQ,CAAC,EAAE,CAAC;IAChB;EACJ,CAAC;EAED,oBACIN,OAAA;IAAKc,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAC9Bf,OAAA;MAAKc,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBf,OAAA;QAAKc,SAAS,EAAC,UAAU;QAAAC,QAAA,EACpBZ,QAAQ,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBlB,OAAA;UAAiBc,SAAS,EAAEG,GAAG,CAACN,MAAO;UAAAI,QAAA,EAClCE,GAAG,CAACP;QAAI,GADHQ,KAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtB,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBf,OAAA;UACIuB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEnB,KAAM;UACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,UAAU,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAItB,UAAU,CAAC,CAAE;UACrDuB,WAAW,EAAC;QAAmB;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACFtB,OAAA;UAAQ+B,OAAO,EAAExB,UAAW;UAAAQ,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CAzCID,OAAO;AAAA+B,EAAA,GAAP/B,OAAO;AA2Cb,eAAeA,OAAO;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}